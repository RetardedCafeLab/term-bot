const { Composer, Markup } = require('telegraf');
const User = require('../../models/user');
const Content = require('../../models/content');
const logger = require('../../utils/logger');
const { formatters } = require('../../utils/terminalFormatter');
const { requireAdmin } = require('../../middleware/auth');
const config = require('../../config');

const adminModule = new Composer();

// –ü—Ä–∏–º–µ–Ω—è–µ–º middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫–æ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º
adminModule.use(requireAdmin);

// –ö–æ–º–∞–Ω–¥–∞ /admin - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
adminModule.command('admin', async (ctx) => {
  try {
    const adminKeyboard = Markup.inlineKeyboard([
      [Markup.button.callback('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'admin_stats')],
      [Markup.button.callback('üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏', 'admin_users')],
      [Markup.button.callback('üìö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º', 'admin_content')],
      [Markup.button.callback('üîÑ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏', 'admin_subscriptions')],
      [Markup.button.callback('üì¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º', 'admin_broadcast')]
    ]);
    
    await ctx.replyWithHTML(
      '<b>–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>\n\n' +
      '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
      adminKeyboard
    );
  } catch (error) {
    logger.error(`Error in admin command handler: ${error.message}`, { error });
    await ctx.reply(formatters.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'));
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
adminModule.action('admin_stats', async (ctx) => {
  try {
    await ctx.answerCbQuery();
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    const totalUsers = await User.countDocuments();
    const activeSubscriptions = await User.countDocuments({ 'subscription.active': true });
    const monthlySubscriptions = await User.countDocuments({ 'subscription.active': true, 'subscription.tier': 'monthly' });
    const quarterlySubscriptions = await User.countDocuments({ 'subscription.active': true, 'subscription.tier': 'quarterly' });
    const annualSubscriptions = await User.countDocuments({ 'subscription.active': true, 'subscription.tier': 'annual' });
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É
    const totalContent = await Content.countDocuments();
    const publishedContent = await Content.countDocuments({ isPublished: true });
    
    // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const subscriptionRate = totalUsers > 0 ? Math.round((activeSubscriptions / totalUsers) * 100) : 0;
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    let statsText = '<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞</b>\n\n';
    
    statsText += '<b>üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b>\n';
    statsText += `‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${totalUsers}\n`;
    statsText += `‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: ${activeSubscriptions} (${subscriptionRate}%)\n`;
    statsText += `‚Ä¢ –ú–µ—Å—è—á–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: ${monthlySubscriptions}\n`;
    statsText += `‚Ä¢ –ö–≤–∞—Ä—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: ${quarterlySubscriptions}\n`;
    statsText += `‚Ä¢ –ì–æ–¥–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: ${annualSubscriptions}\n\n`;
    
    statsText += '<b>üìö –ö–æ–Ω—Ç–µ–Ω—Ç:</b>\n';
    statsText += `‚Ä¢ –í—Å–µ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: ${totalContent}\n`;
    statsText += `‚Ä¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: ${publishedContent}\n`;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
    const backButton = Markup.inlineKeyboard([
      Markup.button.callback('¬´ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', 'back_to_admin')
    ]);
    
    await ctx.editMessageText(statsText, {
      parse_mode: 'HTML',
      ...backButton
    });
  } catch (error) {
    logger.error(`Error in admin stats handler: ${error.message}`, { error });
    await ctx.reply(formatters.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'));
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
adminModule.action('admin_users', async (ctx) => {
  try {
    await ctx.answerCbQuery();
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const recentUsers = await User.find()
      .sort({ registeredAt: -1 })
      .limit(10);
    
    let usersText = '<b>üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</b>\n\n';
    usersText += '<b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b>\n\n';
    
    for (const user of recentUsers) {
      const username = user.username ? `@${user.username}` : '–ù–µ—Ç username';
      const name = [user.firstName, user.lastName].filter(Boolean).join(' ');
      const subscribedText = user.hasActiveSubscription() ? '‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞' : '‚ùå –ù–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏';
      
      usersText += `‚Ä¢ <code>${user.telegramId}</code> - ${name} (${username})\n`;
      usersText += `  ${subscribedText}\n\n`;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    const usersKeyboard = Markup.inlineKeyboard([
      [Markup.button.callback('üîç –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'admin_find_user')],
      [Markup.button.callback('üéÅ –í—ã–¥–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É', 'admin_grant_subscription')],
      [Markup.button.callback('¬´ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', 'back_to_admin')]
    ]);
    
    await ctx.editMessageText(usersText, {
      parse_mode: 'HTML',
      ...usersKeyboard
    });
  } catch (error) {
    logger.error(`Error in admin users handler: ${error.message}`, { error });
    await ctx.reply(formatters.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'));
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
adminModule.action('admin_content', async (ctx) => {
  try {
    await ctx.answerCbQuery();
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    const recentContent = await Content.find()
      .sort({ createdAt: -1 })
      .limit(10);
    
    let contentText = '<b>üìö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º</b>\n\n';
    contentText += '<b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:</b>\n\n';
    
    if (recentContent.length === 0) {
      contentText += '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.\n';
    } else {
      for (const content of recentContent) {
        const publishedText = content.isPublished ? '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω' : '‚ùå –ù–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω';
        contentText += `‚Ä¢ <b>${content.title}</b> (${content.type})\n`;
        contentText += `  ${publishedText} - –£—Ä–æ–≤–µ–Ω—å: ${content.accessLevel}\n\n`;
      }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
    const contentKeyboard = Markup.inlineKeyboard([
      [Markup.button.callback('‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª', 'admin_add_content')],
      [Markup.button.callback('üîç –ù–∞–π—Ç–∏ –º–∞—Ç–µ—Ä–∏–∞–ª', 'admin_find_content')],
      [Markup.button.callback('¬´ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', 'back_to_admin')]
    ]);
    
    await ctx.editMessageText(contentText, {
      parse_mode: 'HTML',
      ...contentKeyboard
    });
  } catch (error) {
    logger.error(`Error in admin content handler: ${error.message}`, { error });
    await ctx.reply(formatters.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'));
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
adminModule.action('admin_subscriptions', async (ctx) => {
  try {
    await ctx.answerCbQuery();
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–æ–¥–ø–∏—Å–∫–∞–º
    const totalSubscriptions = await User.countDocuments({ 'subscription.active': true });
    const expiringThis7Days = await User.countDocuments({
      'subscription.active': true,
      'subscription.endDate': { 
        $gte: new Date(), 
        $lte: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000) 
      }
    });
    const expiredLast7Days = await User.countDocuments({
      'subscription.active': false,
      'subscription.endDate': { 
        $gte: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000), 
        $lte: new Date() 
      }
    });
    
    let subscriptionsText = '<b>üîÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏</b>\n\n';
    subscriptionsText += `‚Ä¢ –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: ${totalSubscriptions}\n`;
    subscriptionsText += `‚Ä¢ –ò—Å—Ç–µ–∫–∞–µ—Ç –≤ –±–ª–∏–∂–∞–π—à–∏–µ 7 –¥–Ω–µ–π: ${expiringThis7Days}\n`;
    subscriptionsText += `‚Ä¢ –ò—Å—Ç–µ–∫–ª–æ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π: ${expiredLast7Days}\n\n`;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
    const subscriptionsKeyboard = Markup.inlineKeyboard([
      [Markup.button.callback('‚ûï –í—ã–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', 'admin_grant_subscription')],
      [Markup.button.callback('üìß –ù–∞–ø–æ–º–Ω–∏—Ç—å –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏', 'admin_remind_expiring')],
      [Markup.button.callback('¬´ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', 'back_to_admin')]
    ]);
    
    await ctx.editMessageText(subscriptionsText, {
      parse_mode: 'HTML',
      ...subscriptionsKeyboard
    });
  } catch (error) {
    logger.error(`Error in admin subscriptions handler: ${error.message}`, { error });
    await ctx.reply(formatters.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–¥–ø–∏—Å–∫–∞—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'));
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
adminModule.action('admin_broadcast', async (ctx) => {
  try {
    await ctx.answerCbQuery();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–µ—Å—Å–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Ö–æ—á–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É
    ctx.session = {
      ...ctx.session,
      adminBroadcast: {
        step: 'awaiting_message',
        filter: 'all'
      }
    };
    
    // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
    const filterKeyboard = Markup.inlineKeyboard([
      [Markup.button.callback('–í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º', 'broadcast_filter_all')],
      [Markup.button.callback('–¢–æ–ª—å–∫–æ —Å –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π', 'broadcast_filter_active')],
      [Markup.button.callback('–° –∏—Å—Ç–µ–∫—à–µ–π –ø–æ–¥–ø–∏—Å–∫–æ–π', 'broadcast_filter_expired')],
      [Markup.button.callback('¬´ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', 'back_to_admin')]
    ]);
    
    await ctx.editMessageText(
      '<b>üì¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º</b>\n\n' +
      '–í—ã–±–µ—Ä–∏—Ç–µ, –∫–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ:',
      {
        parse_mode: 'HTML',
        ...filterKeyboard
      }
    );
  } catch (error) {
    logger.error(`Error in admin broadcast handler: ${error.message}`, { error });
    await ctx.reply(formatters.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ —Ä–∞—Å—Å—ã–ª–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'));
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–∞ —Ä–∞—Å—Å—ã–ª–∫–∏
adminModule.action('broadcast_filter_all', async (ctx) => {
  await ctx.answerCbQuery();
  
  ctx.session.adminBroadcast = {
    ...ctx.session.adminBroadcast,
    filter: 'all'
  };
  
  await ctx.reply(
    formatters.info('–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.') +
    '\n\n–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã.'
  );
});

adminModule.action('broadcast_filter_active', async (ctx) => {
  await ctx.answerCbQuery();
  
  ctx.session.adminBroadcast = {
    ...ctx.session.adminBroadcast,
    filter: 'active'
  };
  
  await ctx.reply(
    formatters.info('–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π.') +
    '\n\n–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã.'
  );
});

adminModule.action('broadcast_filter_expired', async (ctx) => {
  await ctx.answerCbQuery();
  
  ctx.session.adminBroadcast = {
    ...ctx.session.adminBroadcast,
    filter: 'expired'
  };
  
  await ctx.reply(
    formatters.info('–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –∏—Å—Ç–µ–∫—à–µ–π –ø–æ–¥–ø–∏—Å–∫–æ–π.') +
    '\n\n–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã.'
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
adminModule.action('back_to_admin', async (ctx) => {
  try {
    await ctx.answerCbQuery();
    
    const adminKeyboard = Markup.inlineKeyboard([
      [Markup.button.callback('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'admin_stats')],
      [Markup.button.callback('üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏', 'admin_users')],
      [Markup.button.callback('üìö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º', 'admin_content')],
      [Markup.button.callback('üîÑ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏', 'admin_subscriptions')],
      [Markup.button.callback('üì¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º', 'admin_broadcast')]
    ]);
    
    await ctx.editMessageText(
      '<b>–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>\n\n' +
      '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
      {
        parse_mode: 'HTML',
        ...adminKeyboard
      }
    );
  } catch (error) {
    logger.error(`Error in back to admin handler: ${error.message}`, { error });
    await ctx.reply(formatters.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'));
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
adminModule.on('text', async (ctx, next) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
    if (ctx.session.adminBroadcast && ctx.session.adminBroadcast.step === 'awaiting_message') {
      const messageText = ctx.message.text;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π –æ—Ç–º–µ–Ω—ã
      if (messageText.startsWith('/cancel')) {
        delete ctx.session.adminBroadcast;
        await ctx.reply(formatters.info('–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.'));
        return;
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      let filter = {};
      let filterDescription = '–≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º';
      
      if (ctx.session.adminBroadcast.filter === 'active') {
        filter = { 'subscription.active': true };
        filterDescription = '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π';
      } else if (ctx.session.adminBroadcast.filter === 'expired') {
        filter = { 
          'subscription.active': false, 
          'subscription.endDate': { $exists: true, $ne: null } 
        };
        filterDescription = '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –∏—Å—Ç–µ–∫—à–µ–π –ø–æ–¥–ø–∏—Å–∫–æ–π';
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ–≥–ª–∞—Å–Ω–æ —Ñ–∏–ª—å—Ç—Ä—É
      const users = await User.find(filter);
      
      if (users.length === 0) {
        await ctx.reply(formatters.warning(`–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä—É "${filterDescription}".`));
        delete ctx.session.adminBroadcast;
        return;
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤ —Å–µ—Å—Å–∏–∏
      ctx.session.broadcastMessage = {
        text: messageText,
        usersCount: users.length,
        filter: filter
      };
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —à–∞–≥ –Ω–∞ –æ–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
      ctx.session.adminBroadcast.step = 'awaiting_confirmation';
      
      // –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
      const confirmKeyboard = Markup.inlineKeyboard([
        [Markup.button.callback('‚úÖ –î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å', 'confirm_broadcast')],
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_broadcast')]
      ]);
      
      await ctx.reply(
        formatters.warning(`–í–Ω–∏–º–∞–Ω–∏–µ: –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.`) +
        `\n\n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n${messageText}` +
        `\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É:`,
        confirmKeyboard
      );
      
      return; // –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–ª–∏—Å—å
    }
    
    // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏, –ø–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
    return next();
  } catch (error) {
    logger.error(`Error in text message handler for broadcast: ${error.message}`, { error });
    await ctx.reply(formatters.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —Ä–∞—Å—Å—ã–ª–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'));
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /stats - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (—Å–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
adminModule.command('stats', async (ctx) => {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const totalUsers = await User.countDocuments();
    const activeSubscriptions = await User.countDocuments({ 'subscription.active': true });
    const totalContent = await Content.countDocuments();
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    const now = new Date();
    const oneDayAgo = new Date(now - 24 * 60 * 60 * 1000);
    const sevenDaysAgo = new Date(now - 7 * 24 * 60 * 60 * 1000);
    
    const newUsersToday = await User.countDocuments({ registeredAt: { $gte: oneDayAgo } });
    const newUsersThisWeek = await User.countDocuments({ registeredAt: { $gte: sevenDaysAgo } });
    
    const statsText = 
      formatters.info('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:') + '\n\n' +
      `–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${totalUsers}\n` +
      `–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: ${activeSubscriptions}\n` +
      `–í—Å–µ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: ${totalContent}\n\n` +
      `–ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ 24—á: ${newUsersToday}\n` +
      `–ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ 7 –¥–Ω–µ–π: ${newUsersThisWeek}`;
    
    await ctx.reply(statsText);
  } catch (error) {
    logger.error(`Error in stats command handler: ${error.message}`, { error });
    await ctx.reply(formatters.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'));
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /broadcast - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º (–∫–æ—Ä–æ—Ç–∫–∏–π —Å–ø–æ—Å–æ–±)
adminModule.command('broadcast', async (ctx) => {
  try {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    const messageText = ctx.message.text.replace(/^\/broadcast\s+/, '').trim();
    
    if (!messageText) {
      await ctx.reply(
        formatters.error('–ù–µ —É–∫–∞–∑–∞–Ω —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.') +
        '\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /broadcast <—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è>'
      );
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await User.find();
    
    if (users.length === 0) {
      await ctx.reply(formatters.warning('–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.'));
      return;
    }
    
    // –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    const confirmKeyboard = Markup.inlineKeyboard([
      [Markup.button.callback('‚úÖ –î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º', 'confirm_broadcast')],
      [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_broadcast')]
    ]);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤ —Å–µ—Å—Å–∏–∏
    ctx.session = {
      ...ctx.session,
      broadcastMessage: {
        text: messageText,
        usersCount: users.length
      }
    };
    
    await ctx.reply(
      formatters.warning(`–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.`) +
      '\n\n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n' +
      messageText +
      '\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É:',
      confirmKeyboard
    );
  } catch (error) {
    logger.error(`Error in broadcast command handler: ${error.message}`, { error });
    await ctx.reply(formatters.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —Ä–∞—Å—Å—ã–ª–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'));
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–º–µ–Ω—ã —Ä–∞—Å—Å—ã–ª–∫–∏
adminModule.action('confirm_broadcast', async (ctx) => {
  try {
    await ctx.answerCbQuery();
    
    if (!ctx.session.broadcastMessage) {
      await ctx.reply(formatters.error('–î–∞–Ω–Ω—ã–µ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /broadcast.'));
      return;
    }
    
    const { text, usersCount, filter } = ctx.session.broadcastMessage;
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ–≥–ª–∞—Å–Ω–æ —Ñ–∏–ª—å—Ç—Ä—É
    const users = await User.find(filter || {});
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    let successCount = 0;
    let errorCount = 0;
    
    await ctx.reply(formatters.info(`–ù–∞—á–∏–Ω–∞—é —Ä–∞—Å—Å—ã–ª–∫—É ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...`));
    
    for (const user of users) {
      try {
        await ctx.telegram.sendMessage(user.telegramId, text);
        successCount++;
        
        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç—ã Telegram API
        await new Promise(resolve => setTimeout(resolve, 50));
      } catch (error) {
        errorCount++;
        logger.error(`Failed to send broadcast to user ${user.telegramId}: ${error.message}`);
      }
    }
    
    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏ –∏–∑ —Å–µ—Å—Å–∏–∏
    delete ctx.session.broadcastMessage;
    delete ctx.session.adminBroadcast;
    
    await ctx.reply(
      formatters.success(`–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`) +
      `\n\n–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${successCount} –∏–∑ ${usersCount}` +
      (errorCount > 0 ? `\n–û—à–∏–±–æ–∫: ${errorCount}` : '')
    );
  } catch (error) {
    logger.error(`Error in confirm broadcast handler: ${error.message}`, { error });
    await ctx.reply(formatters.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ä–∞—Å—Å—ã–ª–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'));
  }
});

adminModule.action('cancel_broadcast', async (ctx) => {
  try {
    await ctx.answerCbQuery();
    
    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏ –∏–∑ —Å–µ—Å—Å–∏–∏
    delete ctx.session.broadcastMessage;
    delete ctx.session.adminBroadcast;
    
    await ctx.reply(formatters.info('–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.'));
  } catch (error) {
    logger.error(`Error in cancel broadcast handler: ${error.message}`, { error });
    await ctx.reply(formatters.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'));
  }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞
adminModule.command('webhook_info', async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if (!config.bot.adminUserIds.includes(ctx.from.id)) {
      await ctx.reply(formatters.error('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.'));
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ–±—Ö—É–∫–µ
    const webhookInfo = await ctx.telegram.getWebhookInfo();
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –≤—ã–≤–æ–¥–∞
    const infoMessage = formatters.info('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤–µ–±—Ö—É–∫–∞:') +
      `\n\nURL: ${webhookInfo.url || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}` +
      `\nIP-–∞–¥—Ä–µ—Å: ${webhookInfo.ip_address || '–ù–µ —É–∫–∞–∑–∞–Ω'}` +
      `\n–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${webhookInfo.last_error_message || '–ù–µ—Ç –æ—à–∏–±–æ–∫'}` +
      `\n–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—à–∏–±–∫–∏: ${webhookInfo.last_error_date ? new Date(webhookInfo.last_error_date * 1000).toISOString() : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}` +
      `\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π: ${webhookInfo.max_connections || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}` +
      `\n–û–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${webhookInfo.pending_update_count || 0}` +
      `\n\n–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: ${config.bot.useWebhook ? 'Webhook' : 'Long Polling'}` +
      `\n–ü–æ—Ä—Ç: ${config.bot.webhookPort}`;
    
    await ctx.reply(infoMessage);
  } catch (error) {
    logger.error(`Error in webhook_info command: ${error.message}`, { error });
    await ctx.reply(formatters.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–µ–±—Ö—É–∫–µ: ${error.message}`));
  }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞
adminModule.command('reset_webhook', async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if (!config.bot.adminUserIds.includes(ctx.from.id)) {
      await ctx.reply(formatters.error('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.'));
      return;
    }
    
    // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –≤–µ–±—Ö—É–∫
    await ctx.telegram.deleteWebhook();
    logger.info('Webhook deleted');
    
    // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω URL –≤–µ–±—Ö—É–∫–∞ –∏ useWebhook = true, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –≤–µ–±—Ö—É–∫
    if (config.bot.webhookUrl && config.bot.useWebhook) {
      await ctx.telegram.setWebhook(config.bot.webhookUrl);
      logger.info(`New webhook set to ${config.bot.webhookUrl}`);
      await ctx.reply(formatters.success(`–í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ ${config.bot.webhookUrl}`));
    } else {
      // –ò–Ω–∞—á–µ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ long polling
      logger.info('Bot is working in long polling mode');
      await ctx.reply(formatters.success('–í–µ–±—Ö—É–∫ —É–¥–∞–ª–µ–Ω. –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ long polling.'));
    }
  } catch (error) {
    logger.error(`Error in reset_webhook command: ${error.message}`, { error });
    await ctx.reply(formatters.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤–µ–±—Ö—É–∫–∞: ${error.message}`));
  }
});

module.exports = adminModule; 